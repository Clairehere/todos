{"version":3,"sources":["constants/routes.js","store/types.js","store/actions/task.js","components/tasks/TaskList.jsx","components/tasks/NewTaskDialog.jsx","components/lists/ListTitle.js","components/home/TodoListPage.jsx","store/actions/list.js","HOC/withTopMenu.jsx","components/tasks/TaskCard.jsx","App.js","reportWebVitals.js","enhancers/monitorReducers.js","middleware/logger.js","mocks/_objects.js","store/reducers/dataReducer.js","store/reducers/rootReducer.js","store/reducers/notificationReducer.js","index.js","configureStore.js"],"names":["TASK","SELECT_LIST","EDIT_LIST","CHECK_TASK","PUSH_TASK","checkTask","task","dispatch","type","payload","compose","withRouter","withStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","withTranslation","connect","state","tasks","data","initialTasks","filter","t","listId","selectedList","id","history","classes","List","aria-label","className","sort","isChecked","map","labelId","ListItem","dense","ListItemIcon","Checkbox","edge","onChange","checked","inputProps","ListItemText","style","textDecoration","primary","name","secondary","description","length","substr","ListItemSecondaryAction","IconButton","onClick","push","replace","Divider","pushTask","open","handleClose","useState","setName","setDescription","Dialog","onClose","fullWidth","aria-labelledby","onSubmit","e","preventDefault","DialogTitle","DialogContent","TextField","autoFocus","required","target","value","label","margin","DialogActions","Button","color","styles","makeStyles","display","flash","props","alertDate","animationName","animationDuration","animationTimingFunction","animationIterationCount","opacity","defaultValue","setValue","editMode","setEditMode","tmpValue","setTmpValue","date","useMemo","Date","deadline","toDate","getTime","setDate","getDate","handleSubmit","onKeyPress","key","Tooltip","title","CheckCircle","fontSize","Cancel","format","marginLeft","container","lists","initialLists","editList","list","dialogOpen","setDialogOpen","marginTop","menuButton","marginRight","spacing","withTopMenu","ComposedComponent","AppBar","position","Toolbar","Typography","variant","noWrap","minWidth","alignItems","justifyContent","match","params","Card","CardContent","component","gutterBottom","App","exact","to","TodoListPage","path","ROUTES","TaskCard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","logger","store","next","createdAt","combineReducers","taskIndex","findIndex","Math","random","toString","substring","notifications","createTheme","light","main","dark","overrides","MuiDrawer","MuiButton","textTransform","contained","boxShadow","MuiTabs","indicator","height","borderTopLeftRadius","borderTopRightRadius","common","white","MuiTab","padding","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","borderRadius","MuiDivider","MuiListItemText","fontWeight","typography","fontWeightMedium","MuiListItemIcon","MuiAvatar","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","rootReducer","configureStore","i18next","init","interpolation","escapeValue","lng","resources","fr","translation_fr","ReactDOM","render","Fragment","I18nextProvider","i18n","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.80123243.chunk.js","sourcesContent":["export const LOGIN = '/login'\nexport const HOME = '/'\nexport const TASK = '/task/:id?'","// LIST\nexport var SELECT_LIST='SELECT_LIST'\nexport const FETCH_INITIAL_LIST = 'FETCH_INITIAL_LIST'\nexport const EDIT_LIST = 'EDIT_LIST'\n\n\n// TASK\nexport const CHECK_TASK = 'CHECK_TASK'\nexport const PUSH_TASK = 'PUSH_TASK'","// PUSH , REMOVE , CHECKED\n\nimport {CHECK_TASK, PUSH_TASK} from \"../types\"\n\nexport const checkTask = task => dispatch =>\n  dispatch({\n    type: CHECK_TASK,\n    payload: task,\n  })\n\n\nexport const pushTask = (task) => dispatch =>\n  dispatch({\n    type: PUSH_TASK,\n    payload: task,\n  })","import ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Divider from \"@material-ui/core/Divider\"\nimport React from \"react\"\nimport {compose} from 'recompose'\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport PropTypes from 'prop-types'\nimport List from \"@material-ui/core/List\"\nimport {connect} from \"react-redux\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport {withTranslation} from \"react-i18next\"\nimport {checkTask} from \"../../store/actions/task\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from '@material-ui/icons/Edit'\nimport { withRouter } from 'react-router-dom'\nimport { TASK} from \"../../constants/routes\"\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\nexport const TaskList = ({ t, history, tasks, classes, checkTask }) => {\n return(\n   <List aria-label=\"tasks\" className={classes.root}>\n     {tasks.sort(t => t.isChecked ? 1 : -1).map(task =>{\n       const labelId = `checkbox-list-secondary-label-${task.id}`\n       return(\n       <div key={task.id}>\n       <ListItem key={task} dense >\n         <ListItemIcon>\n           <Checkbox\n             edge=\"start\"\n             onChange={()=> checkTask(task)}\n             checked={task.isChecked}\n             inputProps={{ 'aria-labelledby':labelId }}\n           />\n         </ListItemIcon>\n         <ListItemText\n           style={{textDecoration: task.isChecked ? 'line-through' :'none'}}\n           primary={task.name}\n           secondary={task.description?.length > 15 ?  task.description.substr(0, 15) + '...'  : task.description}\n         />\n         <ListItemSecondaryAction>\n           <IconButton edge=\"end\" aria-label=\"push\" onClick={()=> history.push(TASK.replace(':id?', task.id))}>\n             <EditIcon />\n           </IconButton>\n         </ListItemSecondaryAction>\n       </ListItem>\n       <Divider/>\n       </div>)\n       }\n     )}\n   </List>\n )\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    tasks: state.data.initialTasks.filter(t => t.listId === state.data.selectedList?.id) || []\n  })\n}\n\n\nTaskList.propTypes = {\n  t: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n  checkTask: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  withTranslation('common'),\n  connect(mapStateToProps, {checkTask}),\n)(TaskList)\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {DialogActions, Dialog, DialogTitle, TextField, Button, DialogContent} from '@material-ui/core'\nimport {compose} from \"recompose\";\nimport {connect} from \"react-redux\";\nimport { pushTask} from \"../../store/actions/task\"\n\n\nexport function NewTaskDialog({open, handleClose, t, pushTask}) {\n  const [name, setName] = useState(null)\n  const [description, setDescription] = useState(null)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    pushTask({name, description})\n    handleClose()\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth={'xs'}\n      fullWidth\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <form onSubmit={handleSubmit}>\n        <DialogTitle id={t('task.tile')}>{t('task.tile')}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            onChange={e => setName(e.target.value)}\n            value={name || ''}\n            label={t('task.name')}\n            margin=\"dense\"\n            id=\"name\"\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            onChange={e => setDescription(e.target.value)}\n            value={description || ''}\n            label={t('task.description')}\n            margin=\"dense\"\n            id=\"description\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {t('action.cancel')}\n          </Button>\n          <Button type='submit' color=\"primary\">\n            {t('action.submit')}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n\nNewTaskDialog.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  pushTask: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n}\n\nexport default compose(\n  connect(null, {pushTask}))(NewTaskDialog)\n","import React, {useMemo, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles, Tooltip, IconButton,makeStyles } from '@material-ui/core'\nimport { withTranslation} from 'react-i18next'\nimport { compose } from 'recompose'\nimport { Cancel, CheckCircle } from '@material-ui/icons'\nimport {format} from \"date-fns\";\nimport TextField from \"@material-ui/core/TextField\"\nimport AlarmIcon from '@material-ui/icons/Alarm'\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n  flash: {\n    color: props => props.alertDate ? 'red': 'primary',\n    animationName:'$flash' ,\n    animationDuration: props => props.alertDate ?'4s' :'0s',\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite',\n  },\n  \"@keyframes flash\": {\n    '0%' :  { opacity:1 },\n    '40%':   { opacity:0 },\n    '100%': { opacity:1 },\n  },\n})\n\nexport const ListTitle = ({ t, defaultValue, setValue }) => {\n\n  const [editMode, setEditMode] = useState(false)\n  const [tmpValue, setTmpValue] = useState(defaultValue.name)\n\n  const date = useMemo(() => new Date(), [])\n  const alertDate = useMemo(() => {\n    if (!defaultValue || !defaultValue.deadline) return\n    return  (defaultValue.deadline.toDate().getTime() < date.setDate(date.getDate() + 1) )\n  }, [defaultValue])\n\n  const style = styles({ alertDate })\n\n\n  const handleSubmit = () => {\n    setValue({...defaultValue, name: tmpValue})\n    setEditMode(false)\n  }\n\n  return editMode\n    ? <div className={style.root}>\n      <TextField\n        required\n        id=\"standard-basic\"\n        autoFocus\n        value={tmpValue}\n        onChange={e => setTmpValue(e.target.value)}\n        onKeyPress={e => e.key === 'Enter' && handleSubmit()}\n        type={'text'}\n      />\n      <Tooltip title={t('submit')}>\n        <IconButton aria-label='submit' onClick={() => handleSubmit()}>\n          <CheckCircle fontSize={'small'} />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={t('cancel')} onClick={() => setEditMode(false)}>\n        <IconButton aria-label='cancel'>\n          <Cancel fontSize={'small'} />\n        </IconButton>\n      </Tooltip>\n    </div>\n    :  <h2 onClick={() => setEditMode(true)}> {defaultValue.name}\n      <Tooltip title={\"Deadline :\" + format(defaultValue.deadline.toDate(), 'dd/MM/yyyy')}>\n        <Button aria-label=\"archive\">\n          <AlarmIcon edge={\"start\"} className={style.flash}/>\n        </Button>\n      </Tooltip>\n    </h2>\n}\n\nListTitle.propTypes = {\n  t: PropTypes.func.isRequired,\n  defaultValue: PropTypes.object,\n  setValue: PropTypes.func.isRequired,\n}\n\nexport default compose(\n  withStyles(styles),\n  withTranslation('common'),\n)(ListTitle)\n","import {withTranslation} from \"react-i18next\"\nimport {connect} from 'react-redux'\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport React, { useState} from \"react\"\nimport {compose} from 'recompose'\nimport PropTypes from 'prop-types'\nimport TaskList from \"../tasks/TaskList\"\nimport NewTaskDialog from \"../tasks/NewTaskDialog\"\nimport Button from \"@material-ui/core/Button\"\nimport AddIcon from '@material-ui/icons/Add'\nimport ListTitle from \"../lists/ListTitle\"\nimport {editList} from \"../../store/actions/list\"\n\n\nconst styles = () => ({\n  title: {\n    marginLeft: '10%'\n  },\n  container: {\n    marginLeft: '30%'\n  },\n\n})\n\n\nexport const TodoListPage = ({t, classes, lists, selectedList,editList}) => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n  return (\n    <>\n      <h1>Salut</h1>\n      {selectedList &&\n      <div className={classes.container}>\n        <ListTitle defaultValue={selectedList} setValue={(list)=> editList(list)}/>\n        <Button aria-label=\"archive\" style={{marginTop: '5px'}} onClick={() => setDialogOpen(true)}>\n          <AddIcon edge={\"start\"}/> {t('task.add')}</Button>\n        <TaskList/>\n      </div>}\n      <NewTaskDialog open={dialogOpen} handleClose={() => setDialogOpen(false)} t={t}/>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n lists: state.data.initialLists || [],\n  selectedList: state.data.selectedList || {},\n})\n\n\nTodoListPage.propTypes = {\n  t: PropTypes.func.isRequired,\n  lists: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  selectedList: PropTypes.object,\n  editList: PropTypes.func.isRequired,\n}\n\nexport default compose(\n  withStyles(styles),\n  withTranslation('common'),\n  connect(mapStateToProps, {editList}),\n)(TodoListPage)","import {\n  EDIT_LIST,\n  SELECT_LIST\n} from '../types'\n\n\nexport const selectList = list => dispatch =>\n  dispatch({\n    type: SELECT_LIST,\n    payload: list,\n  })\n\n\nexport const editList = list => dispatch =>\n  dispatch({\n    type: EDIT_LIST,\n    payload: list,\n  })","import React from 'react'\nimport { withStyles } from '@material-ui/core'\nimport { compose } from 'recompose'\nimport { withTranslation} from 'react-i18next'\nimport PropTypes from 'prop-types'\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport HomeIcon from '@material-ui/icons/Home'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {HOME} from \"../constants/routes\"\nimport { withRouter } from 'react-router-dom'\n\nconst styles = theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n})\n\nconst withTopMenu = ComposedComponent => {\n  const HOC = ({ classes, t, history, ...props }) => {\n    return (<>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={()=> history.push(HOME)}\n          >\n            <HomeIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {t('welcome.title')}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div>\n        <ComposedComponent {...props} />\n      </div>\n\n    </>)\n  }\n\n  HOC.propTypes = {\n    classes: PropTypes.object.isRequired,\n    t: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n  }\n\n  return compose(\n    withRouter,\n    withStyles(styles),\n    withTranslation('common')\n  )(HOC)\n}\n\nexport default withTopMenu\n","import React, {useMemo} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from \"prop-types\"\nimport {compose} from \"recompose\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport {withTranslation} from \"react-i18next\"\nimport {connect} from \"react-redux\"\nimport {checkTask} from \"../../store/actions/task\"\nimport CheckIcon from '@material-ui/icons/Check'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CloseIcon from '@material-ui/icons/Close'\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nconst styles = () => ({\n  root: {\n    minWidth: 475,\n  },\n  title: {\n    fontSize: 14,\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '30px'\n  },\n})\n\nexport const TaskCard = ({t, classes, tasks, checkTask}) => {\n  const task = useMemo(() => tasks[0], [tasks])\n\n  return (\n    <div className={classes.container}>\n      <Card className={classes.root}>\n        {task ?\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {task.name}\n              <IconButton edge=\"end\" aria-label=\"check\" onClick={() => checkTask(task)}>\n                <Tooltip title={task.isChecked ? t('task.is-checked') : t('task.isn-t-checked')}>\n                  {task.isChecked ?\n                    <CheckIcon/> : <CloseIcon/>}\n                </Tooltip>\n              </IconButton>\n            </Typography>\n            <br/>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {task.description}\n            </Typography>\n          </CardContent> :\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\"> {t('task.none')}\n            </Typography>\n          </CardContent>}\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, props) => ({\n  tasks: state.data.initialTasks.filter(t => t.id === props.match.params.id) || [],\n})\n\n\nTaskCard.propTypes = {\n  t: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  checkTask: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n}\n\nexport default compose(\n  withStyles(styles),\n  withTranslation('common'),\n  connect(mapStateToProps, {checkTask}),\n)(TaskCard)","import './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport React  from 'react'\nimport * as ROUTES from './constants/routes.js'\nimport TodoListPage from \"./components/home/TodoListPage.jsx\"\nimport withTopMenu from \"./HOC/withTopMenu\"\nimport TaskCard from \"./components/tasks/TaskCard\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact to='src/'  component={withTopMenu(TodoListPage)}/>\n      <Route exact path={ROUTES.TASK} component={withTopMenu(TaskCard)}/>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const monitorReducerEnhancer =\n  createStore => (reducer, initialState, enhancer) => {\n    const monitoredReducer = (state, action) => {\n      return reducer(state, action)\n    }\n\n    return createStore(monitoredReducer, initialState, enhancer)\n  }\n\nexport default monitorReducerEnhancer","const logger = store => next => action => {\n  return next(action)\n}\n\nexport default logger","/*Mocks BDD\n\nLIST\n  id : String\n  name : String\n  createdAt: timeStamp\n  deadline: timeStamp\n\nTASK\n  id: String\n  name : String\n  description : String\n  position:int\n  isChecked : boolean\n  listId : String*/\n\n\nexport const lists = [\n  {\n    id : 'firstList',\n    name : 'Action avant décollage',\n    createdAt: { toDate: () => new Date('01-01-2020')},\n    deadline: { toDate: () => new Date('08-30-2021')}\n  }\n]\n\nexport const tasks = [\n  {\n    id: 'firstTask',\n    name : 'Freins',\n    description : \"Vérifier qu'ils soient efficaces et asymetriques\",\n    position:0,\n    isChecked : true,\n    listId : 'firstList'\n  },\n  {\n    id: 'secondTask',\n    name : 'Cap + Bille',\n    description : \"Vérifier qu'il diminue une fois puis deux et que la bille est à droite\",\n    position:1,\n    isChecked : false,\n    listId : 'firstList'\n  },\n  {\n    id: 'treeTask',\n    name : 'Action avant la rotation',\n    description : \"Vitesse disponible, badin actif, pas d'alarme\",\n    position:2,\n    isChecked : false,\n    listId : 'firstList'\n  },\n  {\n    id: 'otherTask',\n    name : 'Pain',\n    description : null,\n    position:0,\n    isChecked : false,\n    listId : 'secondList'\n  }\n]","import {CHECK_TASK, EDIT_LIST, PUSH_TASK, SELECT_LIST} from '../types'\nimport {lists, tasks} from \"../../mocks/_objects\"\n\n\nconst initialState = {initialLists: lists, initialTasks: tasks, selectedList: lists[0]}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    //LIST\n    case SELECT_LIST:\n      return {...state, selectedList: action.payload}\n    case EDIT_LIST:\n      return {...state, initialLists: [action.payload], selectedList: action.payload}\n\n    // TASK\n    case CHECK_TASK: {\n      let checked = state.initialTasks\n      let taskIndex = checked.findIndex(t => t.id === action.payload.id);\n      checked[taskIndex].isChecked = !checked[taskIndex].isChecked\n      return {...state, initialTasks: checked}\n    }\n    case PUSH_TASK: {\n      const tasks = [\n        ...state.initialTasks || [],\n        {\n          ...action.payload,\n          isChecked: false,\n          listId: state.selectedList.id,\n          position: null,\n          id: (Math.random() + 1).toString(36).substring(7)\n        }\n      ]\n      return {...state, initialTasks: tasks}\n    }\n\n    default:\n      return state\n  }\n}","import dataReducer from \"./dataReducer\"\nimport notificationReducer from './notificationReducer'\nimport { combineReducers } from 'redux'\n\nexport default combineReducers({\n  data: dataReducer,\n  notifications: notificationReducer,\n})\n","export default (state = {}, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport {createTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {CssBaseline} from '@material-ui/core'\nimport i18next from \"i18next\"\nimport {I18nextProvider} from \"react-i18next\"\nimport translation_fr from \"./translations/fr/translation\"\nimport configureStore from './configureStore'\n\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n})\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#18202c',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none',\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1),\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white,\n      },\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1),\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854',\n      },\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20,\n        },\n      },\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32,\n      },\n    },\n  },\n}\n\n\nconst store = configureStore()\n\n\n//TODO : Move to file\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: 'fr',\n  resources: {\n    fr: {\n      common: translation_fr\n    },\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.Fragment>\n      <I18nextProvider i18n={i18next}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <App/>\n      </ThemeProvider>\n      </I18nextProvider>\n    </React.Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middleware/logger'\nimport rootReducer from './store/reducers/rootReducer'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const composedEnhancers = compose(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}